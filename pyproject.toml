####################################################################################################
###############################  PROJECT AND PACKAGE CONFIGURATION  ################################
####################################################################################################
[project]
urls = { Homepage = "https://github.com/kevalmorabia97/github-actions-test" }
name = "my_proj"
authors = [
    { name = "Keval Morabia", email = "28916987+kevalmorabia97@users.noreply.github.com" },
]
description = "My project description"
license = { text = "Apache License 2.0" }
requires-python = ">=3.10,<3.13"
dynamic = ["version", "readme"]
classifiers = [
    "Programming Language :: Python :: 3",
    "Operating System :: OS Independent",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Intended Audience :: Science/Research",
]
dependencies = ["ninja", "numpy", "torch"]

[tool.setuptools.dynamic]
readme = { file = "README.md", content-type = "text/x-markdown" }


[project.optional-dependencies]
dev = [
    # linter tools ############################
    "black==23.3.0",
    "mypy==1.3.0",
    "pre-commit==3.3.2",
    "ruff==0.0.272",
]


[build-system]
requires = [
    "packaging",
    "setuptools>=45",
    "setuptools_scm[toml]>=7.1.0",
]
build-backend = "setuptools.build_meta"


[tool.setuptools]
package-dir = { "" = "." }
packages = { find = { include = ["my_proj*"] } }
package-data = { my_proj = ["**/*.cpp", "**/*.cu"] }


####################################################################################################
###############################  LINTING AND TESTING CONFIGURATION  ################################
####################################################################################################
[tool.black]
line-length = 100
include = '\.pyi?$'
preview = true


[tool.ruff]
# See available rules at https://beta.ruff.rs/docs/rules/
# Flake8 is equivalent to pycodestyle + pyflakes + mccabe.
select = [
    "D",   # pydocstyle
    "E",   # pycodestyle errors
    "F",   # pyflakes
    "I",   # isort
    "N",   # pep8 naming
    "PLE", # pylint errors
    "W",   # pycodestyle warnings
]
extend-ignore = ["D105", "D417", "N812"]
line-length = 120 # Hard limit for comments and docstrings
fix = true


[tool.ruff.per-file-ignores]
"__init__.py" = ["F401", "F403"]
"tests/*" = ["D"]
"setup.py" = ["D"]


[tool.ruff.pydocstyle]
convention = "google"


[tool.ruff.isort]
known-first-party = ["my_proj"]


[tool.ruff.pylint]
max-args = 10


[tool.mypy]
files = "."
install_types = true
non_interactive = true
show_error_codes = true
disable_error_code = [
    "import",
    "assignment",
    "operator",
    "has-type",
    "var-annotated",
    "operator",
    "call-arg",
]
explicit_package_bases = true
namespace_packages = true
# strict checks
strict = true
disallow_subclassing_any = false
disallow_untyped_decorators = false
disallow_any_generics = false
disallow_untyped_calls = false
disallow_incomplete_defs = false
disallow_untyped_defs = false
warn_return_any = false
